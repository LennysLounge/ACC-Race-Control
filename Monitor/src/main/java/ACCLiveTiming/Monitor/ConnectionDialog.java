/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ACCLiveTiming.monitor;

import java.awt.Dimension;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Leonard
 */
public class ConnectionDialog extends javax.swing.JDialog {

    private boolean exitWithConnect = false;

    private InetAddress hostAddress;
    private int hostPort;
    private String displayName;
    private String connectionPassword;
    private int updateInterval;
    private String commandPassword;

    /**
     * Creates new form ConnectionDialog
     */
    public ConnectionDialog() {
        super(null, java.awt.Dialog.ModalityType.TOOLKIT_MODAL);

        //Set look and feel
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ConnectionDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ConnectionDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ConnectionDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ConnectionDialog.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
        setTitle("Acc Live timing connection");
        setLocationRelativeTo(null);
    }

    public boolean exitWithConnect() {
        return exitWithConnect;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        ipTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        portTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        displayNameTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        connectionPasswordTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        updateIntervalTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        commandPasswordTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enableLapTimeLoggingCheckBox = new javax.swing.JCheckBox();
        connectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Connection"));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {100, 100};
        jPanel1Layout.columnWeights = new double[] {0.0, 100.0};
        jPanel1.setLayout(jPanel1Layout);

        jLabel8.setText("IP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel8, gridBagConstraints);

        ipTextField.setText("127.0.0.1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(ipTextField, gridBagConstraints);

        jLabel9.setText("Port:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel9, gridBagConstraints);

        portTextField.setText("9000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(portTextField, gridBagConstraints);

        jLabel10.setText("Display Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel10, gridBagConstraints);

        displayNameTextField.setText("Your name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(displayNameTextField, gridBagConstraints);

        jLabel11.setText("Connection PW:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel11, gridBagConstraints);

        connectionPasswordTextField.setText("asd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(connectionPasswordTextField, gridBagConstraints);

        jLabel12.setText("Update interval:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel12, gridBagConstraints);

        updateIntervalTextField.setText("250");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(updateIntervalTextField, gridBagConstraints);

        jLabel13.setText("Command PW:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(commandPasswordTextField, gridBagConstraints);

        jLabel3.setText("Log lap times:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(enableLapTimeLoggingCheckBox, gridBagConstraints);

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);
        jPanel1.add(connectButton, gridBagConstraints);

        jTabbedPane1.addTab("Connection", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        getAccessibleContext().setAccessibleName("ACC Live Timing connetion");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        InetAddress hostAddress;
        try {
            hostAddress = InetAddress.getByName(ipTextField.getText());
        } catch (UnknownHostException ex) {
            JOptionPane.showMessageDialog(this, ipTextField.getText() + " is not a valid ip address.");
            return;
        }

        int hostPort;
        try {
            hostPort = Integer.valueOf(portTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, portTextField.getText() + " is not a valid port.");
            return;
        }

        int updateInterval;
        try {
            updateInterval = Integer.valueOf(updateIntervalTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, updateIntervalTextField.getText() + " is not a valid port.");
            return;
        }

        this.hostAddress = hostAddress;
        this.hostPort = hostPort;
        this.updateInterval = updateInterval;
        this.displayName = displayNameTextField.getText();
        this.connectionPassword = connectionPasswordTextField.getText();
        this.commandPassword = commandPasswordTextField.getText();

        exitWithConnect = true;
        dispose();
    }//GEN-LAST:event_connectButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField commandPasswordTextField;
    private javax.swing.JButton connectButton;
    private javax.swing.JTextField connectionPasswordTextField;
    private javax.swing.JTextField displayNameTextField;
    private javax.swing.JCheckBox enableLapTimeLoggingCheckBox;
    private javax.swing.JTextField ipTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField portTextField;
    private javax.swing.JTextField updateIntervalTextField;
    // End of variables declaration//GEN-END:variables

    public InetAddress getHostAddress() {
        return hostAddress;
    }

    public int getPort() {
        return hostPort;
    }

    public String getDisplayName() {
        return displayName;
    }

    public String getConnectionPassword() {
        return connectionPassword;
    }

    public String getCommandPassword() {
        return commandPassword;
    }

    public int getUpdateInterval() {
        return updateInterval;
    }
    
    public boolean isLapTimeLoggingEnabled(){
        return enableLapTimeLoggingCheckBox.isSelected();
    }
    
    public void addTabPanel(JPanel panel){
        jTabbedPane1.addTab(panel.getName(), panel);
        Dimension size = panel.getPreferredSize();
        int width = Math.max(size.width, getWidth());
        int height = Math.max(size.height, getHeight());
        setSize(width, height);
    }
}
