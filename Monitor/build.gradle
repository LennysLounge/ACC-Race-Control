plugins{
    id 'java'
    id 'jacoco'
    id 'application'
}

apply from: "${rootDir}/gradle/versioning.gradle"
apply from: "${rootDir}/gradle/license-header.gradle"
def distributionName = "ACC Race Control" + project.ext.versionString


application{
    mainClass = 'racecontrol.Main'
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    testImplementation     'junit:junit:4.13'
    
    //compile group: 'org.processing', name: 'core', version: '3.3.6'
    implementation 'org.processing:core:3.3.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.12.0'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev20200707-1.30.10'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.30.4'
    implementation 'com.google.api-client:google-api-client:1.30.4'
}

run{
    dependsOn installDist
    workingDir new File(new File(buildDir, 'install'),distributionName + "_SNAPSHOT")    
    jvmArgs("-splash:data/loading.png")
}

distributions{
    main{
        distributionBaseName = distributionName + "_SNAPSHOT"
        contents {
            into("/Google Sheets API Key"){
                from "credentials"
            }
        }
    }
}

task copyLibs(type:Copy){
    group = "Release"
    from configurations.runtimeClasspath
    from jar
    into "$projectDir/build/release/" + distributionName + "/lib"
}
task copyDist(type:Copy){
    group = "Release"
    from "$projectDir/src/dist"
    into "$projectDir/build/release/" + distributionName
}

task buildRelease(type: Zip){
    group = "Release"
    dependsOn copyLibs
    dependsOn copyDist
    from "$projectDir/build/release/" + distributionName
    archiveName distributionName + ".zip"
    destinationDir(file("$projectDir/build/release/"))
}


